using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Euler
{
    public partial class frEulerImplementation : Form
    {
        public frEulerImplementation(int eulID)
        {
            InitializeComponent();
            int result = 0;
            switch (eulID)
            {
                case 1:
                    lblDescription.Text = "If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.\nThe sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000.";
                    result = EulerResult_1();
                    lblResult.Text = result.ToString();
                    break;
                case 2:
                    lblDescription.Text = "Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:\n\n 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... \n\nBy considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.";
                    result = EulerResult_2();
                    lblResult.Text = result.ToString();
                    break;
                case 3:
                    lblDescription.Text = "Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:\n\n 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... \n\nBy considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.";
                    result = EulerResult_3();
                    lblResult.Text = result.ToString();
                    break;
                default:
                    break;
            }
            
        }
        private int EulerResult_1()
        {
            int sum=0;
            for(int i=0; i<1000; i++)
            {
                if(i%3==0 || i%5==0) {
                    sum += i;
                }
            }
            return sum;
        }
        
        private int EulerResult_2()
        {
            int sum = 0;
            sum = getFibNum();

            return sum;

        }
        private int getFibNum()
        {
            int fib1 = 1;
            int fib2 = 2;
            int sum = 0;
            while (true)
            {
                if(fib1<4000000)
                {
                    int temp = fib1;
                    fib1 = fib2;
                    fib2 = temp + fib2;
                } else {
                    break;
                }
                if (fib1 % 2 == 0)
                {
                    sum += fib1;
                }
            }
            return sum;
        }
        private int EulerResult_3()
        {
            long x = 600851475143;
            bool prime = true;
            for(long i= (long)Math.Sqrt(x); i > 0;  i--)
            {
                if(x % i ==0)
                {
                    prime = true;
                    if (i % 2 == 0) continue;

                    for(int j=3; j< i && prime==true ;j++)
                    {
                        if(i%j==0)
                        {
                            prime = false;
                        }
                    }
                    if(prime)
                    {
                        return (int)i;
                    }
                    prime = false;
                }
            }
            return -1;
        }
    }
}
